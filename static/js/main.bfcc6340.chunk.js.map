{"version":3,"sources":["images/cover_face.svg","images/handwash.svg","images/dont_touch_face.svg","images/handrub.svg","images/face_mask.svg","images/social_distancing.svg","userpages/home/Home.js","views/header/Header.js","App.js","serviceWorker.js","i18n.js","index.js"],"names":["module","exports","HomeComponent","t","this","props","className","title","src","frameBorder","allow","allowFullScreen","handwash","alt","coverFace","dTouchFace","handRub","socialDistancing","faceMask","React","Component","HomeTrans","withTranslation","Home","fallback","HeaderComponent","event","i18n","lang","target","value","changeLanguage","console","log","to","href","rel","onChange","e","defaultValue","HeaderTrans","Header","App","exact","path","component","Boolean","window","location","hostname","match","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","interpolation","escapeValue","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bfcc6340.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cover_face.8458c828.svg\";","module.exports = __webpack_public_path__ + \"static/media/handwash.2708ccaf.svg\";","module.exports = __webpack_public_path__ + \"static/media/dont_touch_face.2f3c3d90.svg\";","module.exports = __webpack_public_path__ + \"static/media/handrub.f0a5d838.svg\";","module.exports = __webpack_public_path__ + \"static/media/face_mask.0a2b4dab.svg\";","module.exports = __webpack_public_path__ + \"static/media/social_distancing.f11225ad.svg\";","import React, { Suspense } from 'react';\nimport { withTranslation } from 'react-i18next';\n\n/* import UserEngagementForm from '../../views/UserEngagementForm'\nimport CityGraphics from '../../views/CityGraphics/CityGraphics'\nimport MarkdownContent from '../../views/MarkdownContent' */\n\nimport './Home.scss'\n// import Content from './mk.md'\n\nimport coverFace from '../../images/cover_face.svg'\nimport handwash from '../../images/handwash.svg'\nimport dTouchFace from '../../images/dont_touch_face.svg'\nimport handRub from '../../images/handrub.svg'\nimport faceMask from '../../images/face_mask.svg'\nimport socialDistancing from '../../images/social_distancing.svg'\n\nclass HomeComponent extends React.Component {\n\n    render() {\n        const { t } = this.props;\n        \n        return (\n            <>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-6\">\n                            <iframe className=\"embed-video\" title=\"Information WHO\" src={t('home.resources.who')} frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n                        </div>\n                        <div className=\"col-md-6 info-box\">\n                            <h2>{t('home.what_is_corona')}</h2>\n                            {t('home.what_is_corona_answer')} <code>{t('home.what_is_corona_punch')}</code>\n                        </div>\n                    </div>\n                    <div className=\"prevent-box\">\n                        <h1>{t('home.how_to_prevent_infection')}</h1>\n                        <div className=\"row\">\n                            <div className=\"col-md-4\">\n                                <img className=\"minor-image\" src={handwash} alt=\"Handwash\"/>\n                                <h3>{t('home.handwash')}</h3>\n                            </div>\n                            <div className=\"col-md-4\">\n                                <img className=\"minor-image\" src={coverFace} alt=\"cover your face\"/>\n                                <h3>{t('home.cover_face')}</h3>\n                            </div>\n                            <div className=\"col-md-4\">\n                                <img className=\"minor-image\" src={dTouchFace} alt=\"Handwash\"/>\n                                <h3>{t('home.dont_touch_face')}</h3>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-md-4\">\n                                <img className=\"minor-image\" src={handRub} alt=\"Handwash\"/>\n                                <h3>{t('home.handrub')}</h3>\n                            </div>\n                            <div className=\"col-md-4\">\n                                <img className=\"minor-image\" src={socialDistancing} alt=\"Handwash\"/>\n                                <h3>{t('home.social_distancing')}</h3>\n                            </div>\n                            <div className=\"col-md-4\">\n                                <img className=\"minor-image\" src={faceMask} alt=\"Handwash\"/>\n                                <h3>{t('home.mask')}</h3>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \n                \n                {/* <UserEngagementForm/>\n                <CityGraphics/>\n                <MarkdownContent className=\"content\" text={Content} /> */}\n            </>\n        );\n    }\n}\n\nconst HomeTrans = withTranslation()(HomeComponent)\n\n// i18n translations might still be loaded by the xhr backend\n// use react's Suspense\nexport default function Home() {\n  return (\n    <Suspense fallback=\"loading\">\n      <HomeTrans />\n    </Suspense>\n  );\n}\n","import React, { Suspense } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom'\nimport './Header.scss'\n\nclass HeaderComponent extends React.Component {\n\n    changeLanguage(event, i18n) {\n        let lang = event.target.value\n        i18n.changeLanguage(lang);\n        console.log('language: ' + lang)\n    }\n    render() {\n        return (\n            <header>\n                <ul>\n                    <li>\n                        <Link to=\"/covid19\">Home</Link>\n                    </li>\n                    <li>\n                        <Link to=\"#\">Active Funds</Link>\n                    </li>\n                    <li>\n                        <Link to=\"#\">Volunteer</Link>\n                    </li>\n                    <li>\n                        <div className=\"dropdown\">\n                            <div className=\"dropdown-button\">\n                                <Link to=\"#\">Get Help</Link>\n                            </div>\n                            <div className=\"dropdown-content\">\n                                <Link to=\"\">WHO</Link>\n                                <Link to=\"\">Ministry of Health</Link>\n                            </div>\n                        </div>\n                    </li>\n                    <li>\n                        <div className=\"dropdown\">\n                            <div className=\"dropdown-button\">\n                                <Link to=\"#\">Learn</Link>\n                            </div>\n                            <div className=\"dropdown-content\">\n                                <a href=\"https://www.mohfw.gov.in/pdf/SocialDistancingAdvisorybyMOHFW.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">What is Social Distancing?</a>\n                                <a href=\"https://www.mohfw.gov.in/pdf/Mask-Eng.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">When to wear a mask?</a>\n                                <a href=\"https://www.mohfw.gov.in/pdf/FINAL_14_03_2020_ENg.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">When to get tested for covid-19?</a>\n                            </div>\n                        </div>\n                    </li>\n                </ul>\n                <div className=\"language-box\">\n                    Language:\n                    <select onChange={(e) => this.changeLanguage(e, this.props.i18n)} defaultValue=\"en\">\n                        <option value=\"en\">English</option>\n                        <option value=\"in_hi\">हिंदी</option>\n                        <option value=\"in_knn\">ಕೆನಡಾ</option>\n                        <option value=\"in_tam\">தமிழ்</option>\n                    </select>\n                </div>\n            </header>\n            \n        )\n    }\n}\n\nconst HeaderTrans = withTranslation()(HeaderComponent)\n\n// i18n translations might still be loaded by the xhr backend\n// use react's Suspense\nexport default function Header() {\n  return (\n    <Suspense fallback=\"loading\">\n      <HeaderTrans />\n    </Suspense>\n  );\n}","import React from 'react';\nimport { Route, Switch, BrowserRouter as Router } from 'react-router-dom'\n\nimport './App.css';\n\n\nimport Home from './userpages/home/Home'\n\nimport Header from './views/header/Header'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n      <Router>\n        <Header/>\n        <Switch>\n          <Route exact path=\"/covid19\" component={Home} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport Backend from 'i18next-xhr-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n// not like to use this?\n// have a look at the Quick start guide \n// for passing in lng and translations on init\n\ni18n\n  // load translation using xhr -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n  // learn more: https://github.com/i18next/i18next-xhr-backend\n  .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    fallbackLng: 'en',\n    debug: true,\n\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    }\n  });\n\n\nexport default i18n;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './i18n';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}